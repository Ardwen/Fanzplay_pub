{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/FALL2021COMP523Project/fanzplay/src/pages/GameManagement/StartGameManage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport GameInfos from \"../components/GameInfos\";\nimport { BackToCenterButton, ManagementCard } from \"../ManageGame\";\nimport { quizlist } from \"../../mockdata\";\nimport { Button, ListGroup, Nav } from \"react-bootstrap\";\nimport NavSection from \"../components/NavSection\";\nimport axios from \"axios\";\nimport { questionURL } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartGameManage = () => {\n  _s();\n\n  const location = useLocation(); // game info past in location.state.thisGame\n\n  const thisGame = location.state.thisGame;\n  const [qidlist, setQidList] = useState(thisGame.qidlist); // get the quiz list for the current game\n\n  const [randomIdx, setRandomIdx] = useState(Math.floor(Math.random() * qidlist.length));\n  const [quizDone, setQuizDone] = useState(qidlist.length == 0);\n  const [currentQuiz, setCurrentQuiz] = useState(null);\n  React.useEffect(() => {\n    console.log(qidlist[randomIdx]);\n    axios.get(questionURL + `/${qidlist[randomIdx]}`).then(response => {\n      setCurrentQuiz(response.data);\n    }).catch(err => console.error(err));\n  }, [randomIdx]);\n\n  const handlePushQuestion = e => {\n    qidlist.splice(randomIdx, 1);\n    setRandomIdx(Math.floor(Math.random() * qidlist.length));\n    console.log(qidlist);\n    setQuizDone(qidlist.length == 0);\n  };\n\n  if (currentQuiz === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"#afe607\"\n          },\n          children: \"Game Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GameInfos, {\n          thisGame: thisGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(QuizDisplay, {\n          quiz: currentQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: quizDone ? /*#__PURE__*/_jsxDEV(BackToCenterButton, {\n            text: \"End Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePushQuestion,\n            children: \"Push Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StartGameManage, \"lLFAyZ6hrziyos69AZqsB8m3k0k=\", false, function () {\n  return [useLocation];\n});\n\n_c = StartGameManage;\n\nconst QuizDisplay = ({\n  quiz\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"white\"\n      },\n      children: quiz.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      as: \"ul\",\n      children: Array.from(quiz.answers).map((answer, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        children: answer\n      }, `answer${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = QuizDisplay;\nexport default StartGameManage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StartGameManage\");\n$RefreshReg$(_c2, \"QuizDisplay\");","map":{"version":3,"sources":["/Users/owner/Desktop/FALL2021COMP523Project/fanzplay/src/pages/GameManagement/StartGameManage.js"],"names":["React","useState","useLocation","GameInfos","BackToCenterButton","ManagementCard","quizlist","Button","ListGroup","Nav","NavSection","axios","questionURL","StartGameManage","location","thisGame","state","qidlist","setQidList","randomIdx","setRandomIdx","Math","floor","random","length","quizDone","setQuizDone","currentQuiz","setCurrentQuiz","useEffect","console","log","get","then","response","data","catch","err","error","handlePushQuestion","e","splice","color","QuizDisplay","quiz","question","Array","from","answers","map","answer","idx"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport GameInfos from \"../components/GameInfos\";\nimport {BackToCenterButton, ManagementCard} from \"../ManageGame\";\nimport {quizlist} from \"../../mockdata\";\nimport {Button, ListGroup, Nav} from \"react-bootstrap\";\nimport NavSection from \"../components/NavSection\";\nimport axios from \"axios\";\nimport {questionURL} from \"../../api/api\";\n\nconst StartGameManage = () =>{\n    const location = useLocation() // game info past in location.state.thisGame\n    const thisGame = location.state.thisGame;\n    const [qidlist, setQidList] = useState(thisGame.qidlist)  // get the quiz list for the current game\n    const [randomIdx, setRandomIdx] = useState(Math.floor((Math.random()*qidlist.length)))\n    const [quizDone, setQuizDone] = useState((qidlist.length==0))\n    const [currentQuiz, setCurrentQuiz] = useState(null)\n    React.useEffect(()=>{\n        console.log(qidlist[randomIdx])\n        axios.get(questionURL+`/${qidlist[randomIdx]}`).then((response) =>{\n                setCurrentQuiz(response.data)\n            }\n        ).catch((err) => console.error(err))\n    }, [randomIdx])\n\n\n    const handlePushQuestion = (e) =>{\n\n        qidlist.splice(randomIdx,1);\n        setRandomIdx(Math.floor((Math.random()*qidlist.length)))\n        console.log(qidlist)\n        setQuizDone((qidlist.length == 0))\n    }\n\n    if (currentQuiz === null){\n        return(<div>Loading...</div>)\n    }\n    return(\n        <>\n            <NavSection />\n            <div className={\"background\"}>\n                <div className={\"overlay\"}>\n                    <h1 style={{color: \"#afe607\"}}>Game Start</h1>\n                    <GameInfos thisGame={thisGame} />\n                    {/*<div style={{color: \"white\"}}>{qidlist[randomIdx]}</div>*/}\n                    <QuizDisplay quiz = {currentQuiz}/>\n                    <div>\n                        {quizDone ? (\n                             <BackToCenterButton text={\"End Game\"} />\n                        ):(\n                             <Button onClick={handlePushQuestion}>Push Question</Button>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst QuizDisplay = ({quiz}) =>{\n\n    return(\n        <div>\n            <h3 style={{color: \"white\"}}>{quiz.question}</h3>\n            <ListGroup as=\"ul\">\n                {Array.from(quiz.answers).map((answer, idx) => (\n                    <ListGroup.Item key={`answer${idx}`} as=\"li\">\n                        {answer}\n                    </ListGroup.Item>\n                ))}\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default StartGameManage;"]},"metadata":{},"sourceType":"module"}